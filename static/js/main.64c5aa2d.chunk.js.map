{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameSize","itemWidth","step","animationDuration","infinite","useState","shift","setShift","useEffect","widthPortion","widthCarousel","length","className","style","width","transform","transition","map","image","src","alt","onClick","currentShift","type","disabled","App","state","itemWidthError","frameSizeError","stepError","durationError","changeItemWidth","Number","isNaN","setState","changeFrameSize","size","changeStepLong","long","changeDuration","time","this","color","defaultValue","placeholder","onChange","event","currentTarget","value","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAuGeA,EA3FmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRD,EAAS,KACR,CAACP,EAAWC,EAAWC,IAE1B,IAAMO,EAAeR,EAAYD,EAC3BU,EAAgBT,EAAYF,EAAOY,OA+BzC,OACE,sBACEC,UAAU,WACVC,MAAO,CAAEC,MAAOL,GAFlB,UAIE,qBACEG,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKJ,EAAL,MACLK,UAAU,cAAD,OAAgBT,EAAhB,OACTU,WAAW,aAAD,OAAeb,EAAf,OALd,SAQGJ,EAAOkB,KAAI,SAAAC,GAAK,OACf,qBACEL,MAAO,CAAEC,MAAOb,GAEhBkB,IAAKD,EACLE,IAAI,SAFCF,QAOX,wBACEG,QAAS,WApDbd,GAAS,SAACe,GACR,OAAqB,IAAjBA,GAAsBlB,IACfM,EAAgBT,EAAYD,GAGnCsB,GAAiBrB,EAAYC,EACxB,EAGFoB,EAAerB,EAAYC,MA4ChCU,UAAU,mBACVW,KAAK,SACLC,SAAUlB,GAAS,IAAMF,EAJ3B,kBASA,wBACEiB,QAAS,WA/Cbd,GAAS,SAACe,GACR,OAAIA,KAAkBZ,EAAgBD,IAAiBL,EAC9C,EAGLkB,GACArB,EAAYC,GADMQ,EAAgBD,KAE3BC,EAAgBD,GAGpBa,EAAerB,EAAYC,MAsChCU,UAAU,mBACV,UAAQ,OACRW,KAAK,SACLC,SAAUlB,KAAWI,EAAgBD,KAAkBL,EALzD,sBCzEAqB,E,4MACJC,MAAQ,CACN3B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,UAAW,EACXC,UAAW,IACXC,KAAM,EACNC,kBAAmB,IACnBC,UAAU,EACVuB,gBAAgB,EAChBC,gBAAgB,EAChBC,WAAW,EACXC,eAAe,G,EAGjBC,gBAAkB,SAACjB,GACbkB,OAAOC,MAAMnB,IAAUA,EAAQ,IAAMA,EAAQ,IAC/C,EAAKoB,SAAS,CAAEP,gBAAgB,IAKlC,EAAKO,SAAS,CAAEjC,UAAWa,EAAOa,gBAAgB,K,EAGpDQ,gBAAkB,SAACC,GACbJ,OAAOC,MAAMG,IAASA,EAAO,GAAKA,EAAO,GAC3C,EAAKF,SAAS,CAAEN,gBAAgB,IAKlC,EAAKM,SAAS,CAAElC,UAAWoC,EAAMR,gBAAgB,K,EAGnDS,eAAiB,SAACC,GACZN,OAAOC,MAAMK,IAASA,EAAO,GAAKA,EAAO,GAC3C,EAAKJ,SAAS,CAAEL,WAAW,IAK7B,EAAKK,SAAS,CAAEhC,KAAMoC,EAAMT,WAAW,K,EAGzCU,eAAiB,SAACC,GACZR,OAAOC,MAAMO,IAASA,EAAO,KAAOA,EAAO,IAC7C,EAAKN,SAAS,CAAEJ,eAAe,IAKjC,EAAKI,SAAS,CAAE/B,kBAAmBqC,EAAMV,eAAe,K,4CAG1D,WAAU,IAAD,OACP,EAWIW,KAAKf,MAVP3B,EADF,EACEA,OACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SACAuB,EAPF,EAOEA,eACAC,EARF,EAQEA,eACAC,EATF,EASEA,UACAC,EAVF,EAUEA,cAGF,OACE,sBAAKlB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCb,EAAOY,OAA1C,aAEA,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,UACGe,EACC,qBAAId,MAAO,CAAE6B,MAAO,OAApB,0BAEE,uBAFF,oBAMA,iDAEF,uBACEnB,KAAK,OACLX,UAAU,QACV+B,aAAc1C,EACd2C,YAAY,cACZC,SAAU,SAACC,GAAD,OAAW,EAClBf,iBAAiBe,EAAMC,cAAcC,aAI5C,sBAAKpC,UAAU,YAAf,UACGgB,EACC,qBAAIf,MAAO,CAAE6B,MAAO,OAApB,0BAEE,uBAFF,kBAMA,4CAEF,uBACEnB,KAAK,OACLX,UAAU,QACV+B,aAAc3C,EACd4C,YAAY,aACZC,SAAU,SAACC,GAAD,OAAW,EAClBX,iBAAiBW,EAAMC,cAAcC,aAI5C,sBAAKpC,UAAU,YAAf,UACGiB,EACC,qBAAIhB,MAAO,CAAE6B,MAAO,OAApB,0BAEE,uBAFF,kBAMA,gDAEF,uBACEnB,KAAK,OACLX,UAAU,QACV+B,aAAczC,EACd0C,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAW,EAClBT,gBAAgBS,EAAMC,cAAcC,aAI3C,sBAAKpC,UAAU,YAAf,UACGkB,EACC,qBAAIjB,MAAO,CAAE6B,MAAO,OAApB,0BAEE,uBAFF,sBAMA,wDAEF,uBACEnB,KAAK,OACLX,UAAU,QACV+B,aAAY,UAAKxC,GACjByC,YAAY,WACZC,SAAU,SAACC,GAAD,OAAW,EAClBP,gBAAgBO,EAAMC,cAAcC,gBAK7C,cAAC,EAAD,CACEjD,OAAQA,EACRC,UAAWA,EACXC,UAAWA,EACXC,KAAMA,EACNC,kBAAmBA,EACnBC,SAAUA,W,GA5KF6C,IAAMC,WAmLTzB,ICjMf0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.64c5aa2d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  frameSize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [shift, setShift] = useState(0);\n\n  useEffect(() => {\n    setShift(0);\n  }, [frameSize, itemWidth, step]);\n\n  const widthPortion = itemWidth * frameSize;\n  const widthCarousel = itemWidth * images.length;\n\n  const handleOnClickBack = () => {\n    setShift((currentShift) => {\n      if (currentShift === 0 && infinite) {\n        return -(widthCarousel - itemWidth * frameSize);\n      }\n\n      if (currentShift > -(itemWidth * step)) {\n        return 0;\n      }\n\n      return currentShift + itemWidth * step;\n    });\n  };\n\n  const handleOnClickForward = () => {\n    setShift((currentShift) => {\n      if (currentShift <= -(widthCarousel - widthPortion) && infinite) {\n        return 0;\n      }\n\n      if (currentShift <= -(widthCarousel - widthPortion)\n        + itemWidth * step) {\n        return -(widthCarousel - widthPortion);\n      }\n\n      return currentShift - itemWidth * step;\n    });\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: widthPortion }}\n    >\n      <div\n        className=\"Carousel__list\"\n        style={{\n          width: `${widthCarousel}px`,\n          transform: `translateX(${shift}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map(image => (\n          <img\n            style={{ width: itemWidth }}\n            key={image}\n            src={image}\n            alt=\"emoji\"\n          />\n        ))}\n      </div>\n\n      <button\n        onClick={() => handleOnClickBack()}\n        className=\"Carousel__button\"\n        type=\"button\"\n        disabled={shift >= 0 && !infinite}\n      >\n        Prev\n      </button>\n\n      <button\n        onClick={() => handleOnClickForward()}\n        className=\"Carousel__button\"\n        data-cy=\"Next\"\n        type=\"button\"\n        disabled={shift <= -(widthCarousel - widthPortion) && !infinite}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n  itemWidthError: boolean,\n  frameSizeError: boolean,\n  stepError: boolean,\n  durationError: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n    itemWidthError: false,\n    frameSizeError: false,\n    stepError: false,\n    durationError: false,\n  };\n\n  changeItemWidth = (width: number) => {\n    if (Number.isNaN(width) || width < 30 || width > 200) {\n      this.setState({ itemWidthError: true });\n\n      return;\n    }\n\n    this.setState({ itemWidth: width, itemWidthError: false });\n  };\n\n  changeFrameSize = (size: number) => {\n    if (Number.isNaN(size) || size < 1 || size > 10) {\n      this.setState({ frameSizeError: true });\n\n      return;\n    }\n\n    this.setState({ frameSize: size, frameSizeError: false });\n  };\n\n  changeStepLong = (long: number) => {\n    if (Number.isNaN(long) || long < 1 || long > 10) {\n      this.setState({ stepError: true });\n\n      return;\n    }\n\n    this.setState({ step: long, stepError: false });\n  };\n\n  changeDuration = (time: number) => {\n    if (Number.isNaN(time) || time < 500 || time > 3000) {\n      this.setState({ durationError: true });\n\n      return;\n    }\n\n    this.setState({ animationDuration: time, durationError: false });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n      itemWidthError,\n      frameSizeError,\n      stepError,\n      durationError,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"app-form\">\n          <div className=\"app-field\">\n            {itemWidthError ? (\n              <h3 style={{ color: 'red' }}>\n                Input number!\n                <br />\n                from 30 to 200\n              </h3>\n            ) : (\n              <h3>Emoji width, px</h3>\n            )}\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={itemWidth}\n              placeholder=\"emoji width\"\n              onChange={(event) => this\n                .changeItemWidth(+event.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"app-field\">\n            {frameSizeError ? (\n              <h3 style={{ color: 'red' }}>\n                Input number!\n                <br />\n                from 1 to 10\n              </h3>\n            ) : (\n              <h3>Frame size</h3>\n            )}\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={frameSize}\n              placeholder=\"frame size\"\n              onChange={(event) => this\n                .changeFrameSize(+event.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"app-field\">\n            {stepError ? (\n              <h3 style={{ color: 'red' }}>\n                Input number!\n                <br />\n                from 1 to 10\n              </h3>\n            ) : (\n              <h3>Step per click</h3>\n            )}\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={step}\n              placeholder=\"step per click\"\n              onChange={(event) => this\n                .changeStepLong(+event.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"app-field\">\n            {durationError ? (\n              <h3 style={{ color: 'red' }}>\n                Input number!\n                <br />\n                from 500 to 3000\n              </h3>\n            ) : (\n              <h3>Animation duration, ms</h3>\n            )}\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={`${animationDuration}`}\n              placeholder=\"duration\"\n              onChange={(event) => this\n                .changeDuration(+event.currentTarget.value)}\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}