{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameSize","itemWidth","step","animationDuration","infinite","useState","shift","setShift","useEffect","widthPortion","widthCarousel","length","className","style","width","transform","transition","map","image","src","alt","onClick","currentShift","type","disabled","App","state","changeItemWidth","setState","changeFrameSize","size","changeStepLong","long","changeDuration","time","this","defaultValue","placeholder","onChange","event","currentTarget","value","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc09b435.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  frameSize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [shift, setShift] = useState(0);\n\n  useEffect(() => {\n    setShift(0);\n  }, [frameSize, itemWidth, step]);\n\n  const widthPortion = itemWidth * frameSize;\n  const widthCarousel = itemWidth * images.length;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: widthPortion }}\n    >\n      <div\n        className=\"Carousel__list\"\n        style={{\n          width: `${widthCarousel}px`,\n          transform: `translateX(${shift}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map(image => (\n          <img\n            style={{ width: itemWidth }}\n            key={image}\n            src={image}\n            alt=\"emoji\"\n          />\n        ))}\n      </div>\n\n      <button\n        onClick={() => {\n          setShift((currentShift) => {\n            if (currentShift === 0 && infinite) {\n              return -(widthCarousel - itemWidth * frameSize);\n            }\n\n            if (currentShift > -(itemWidth * step)) {\n              return 0;\n            }\n\n            return currentShift + itemWidth * step;\n          });\n        }}\n        type=\"button\"\n        disabled={shift >= 0 && !infinite && true}\n      >\n        Prev\n      </button>\n\n      <button\n        onClick={() => {\n          setShift((currentShift) => {\n            if (currentShift <= -(widthCarousel - widthPortion) && infinite) {\n              return 0;\n            }\n\n            if (currentShift <= -(widthCarousel - widthPortion)\n              + itemWidth * step) {\n              return -(widthCarousel - widthPortion);\n            }\n\n            return currentShift - itemWidth * step;\n          });\n        }}\n        data-cy=\"Next\"\n        type=\"button\"\n        disabled={shift <= -(widthCarousel - widthPortion) && !infinite && true}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeItemWidth = (width: number) => {\n    this.setState({ itemWidth: width });\n  };\n\n  changeFrameSize = (size: number) => {\n    this.setState({ frameSize: size });\n  };\n\n  changeStepLong = (long: number) => {\n    this.setState({ step: long });\n  };\n\n  changeDuration = (time: number) => {\n    this.setState({ animationDuration: time });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"app-form\">\n          <div className=\"app-field\">\n            <h3>Emoji width</h3>\n\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={`${itemWidth}px`}\n              placeholder=\"emoji width\"\n              onChange={(event) => this\n                .changeItemWidth(+event.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"app-field\">\n            <h3>Frame size</h3>\n\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={frameSize}\n              placeholder=\"frame size\"\n              onChange={(event) => this\n                .changeFrameSize(+event.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"app-field\">\n            <h3>Step per click</h3>\n\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={step}\n              placeholder=\"step per click\"\n              onChange={(event) => this\n                .changeStepLong(+event.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"app-field\">\n            <h3>Animation duration</h3>\n\n            <input\n              type=\"text\"\n              className=\"field\"\n              defaultValue={`${animationDuration}ms`}\n              placeholder=\"duration\"\n              onChange={(event) => this\n                .changeDuration(+event.currentTarget.value)}\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}